version: '3'

services:
  mysql:
    image: mysql:8.0
    restart: always
    ports:
      - "3307:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=changeme
      - MYSQL_USER=mailbadger
      - MYSQL_PASSWORD=changeme
      - MYSQL_DATABASE=mailbadger
    volumes:
      - dbdata:/var/lib/mysql
      - ./config/my.cnf:/etc/mysql/conf.d/my.cnf
  nsqlookupd:
    image: nsqio/nsq
    command: /nsqlookupd
    ports:
      - "4160"
      - "4161:4161"
  nsqd:
    image: nsqio/nsq
    command: /nsqd --broadcast-address=nsqd --lookupd-tcp-address=nsqlookupd:4160
    depends_on:
      - nsqlookupd
    ports:
      - "4150:4150"
      - "4151:4151"
  nsqadmin:
    image: nsqio/nsq
    command: /nsqadmin --lookupd-http-address=nsqlookupd:4161
    depends_on:
      - nsqlookupd
    ports:
      - "4171:4171"
  redis:
    image: redis # we need to decide the version
    ports:
      - 6379:6379
    volumes:
      - ./config/redis.conf:/redis.conf
    command: [ "redis-server", "/redis.conf" ]
  opa:
    image: openpolicyagent/opa:latest
    ports:
      - "8181"
    # WARNING: OPA is NOT running with an authorization policy configured. This
    # means that clients can read and write policies in OPA. If you are
    # deploying OPA in an insecure environment, be sure to configure
    # authentication and authorization on the daemon. See the Security page for
    # details: https://www.openpolicyagent.org/docs/security.html.
    command:
      - "run"
      - "--server"
      - "--log-level=debug"
      - "rbac_authz.rego"
    volumes:
      - ./opa/rbac_authz.rego:/rbac_authz.rego
  # app:
  #   image: mailbadger/app
  #   command: /app
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - mysql
  #     - nsqd
  #   env_file: 
  #   - .env.docker

  # bulksender:
  #   image: mailbadger/app
  #   command: /consumers/bulksender
  #   depends_on:
  #     - app
  #   env_file: 
  #   - .env.docker

  # campaigner:
  #   image: mailbadger/app
  #   command: /consumers/campaigner
  #   depends_on:
  #     - app
  #   env_file: 
  #   - .env.docker

volumes:
  dbdata:
